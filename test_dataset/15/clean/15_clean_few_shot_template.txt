Review the provided Ansible code for potential software defect(s) based on the given examples.
After your review, assign the code a label from [Defective, None-defective].
‘Defective’ implies that there is at least one software defect. ‘None-defective’ implies that there is no software defect.
Return only the label.
Code: 
---
- name: set_facts | Setting Debian/Ubuntu Pre-Reqs
  set_fact:
    influxdb_pre_req_packages:
      - git
      - python-dev
      - python-pip
      - python-setuptools
      - python-virtualenv
      - python3-dev
      - python3-pip
      - python3-setuptools
      - python3-venv
      - sshpass
      - virtualenv
  when:
    - ansible_os_family == "Debian"
    - ansible_python_version is version('3', '<')

- name: set_facts | Setting Debian/Ubuntu Pre-Reqs
  set_fact:
    influxdb_pre_req_packages:
      - git
      - python3-dev
      - python3-pip
      - python3-setuptools
      - python3-venv
      - sshpass
      - virtualenv
  when:
    - ansible_os_family == "Debian"
    - ansible_python_version is version('3', '>=')

- name: set_facts | Setting RedHat Facts
  set_fact:
    influxdb_pre_req_packages:
      - git
      - python-devel
      - python-dnf
      - python-pip
      - python-setuptools
      - python-virtualenv
      - sshpass
  when:
    - ansible_os_family == "RedHat"
    - ansible_python_version is version('3', '<')

- name: set_facts | Setting RedHat Facts
  set_fact:
    influxdb_pre_req_packages:
      - git
      - python3-devel
      - python3-pip
      - python3-setuptools
      - python3-virtualenv
      - sshpass
  when:
    - ansible_os_family == "RedHat"
    - ansible_python_version is version('3', '>=')
Label: Defective
Code: 
---
- name: set_facts | Setting Debian/Ubuntu Facts
  ansible.builtin.set_fact:
    influxdb_pre_req_packages:
      - apt-transport-https
  when: ansible_os_family == "Debian"
Label: None-defective

Code: 
---

- set_fact: es_script_dir={{ es_conf_dir }}/{{es_instance_name}}
  tags:
      - always

- set_fact: es_script_dir={{es_config['path.scripts']}}
  when: es_config['path.scripts'] is defined
  tags:
      - always

- name: Create script dir
  file: state=directory path={{ es_script_dir }} owner={{ es_user }} group={{ es_group }}

- name: Copy default scripts to elasticsearch
  copy: src=scripts dest={{ es_script_dir }} owner={{ es_user }} group={{ es_group }}
  when: es_scripts_fileglob is not defined

- name: Copy scripts to elasticsearch
  copy: src={{ item }} dest={{ es_script_dir }} owner={{ es_user }} group={{ es_group }}
  with_fileglob: "{{ es_scripts_fileglob }}"

Label: